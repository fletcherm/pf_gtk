---

# Notes:
# Sample project C code is not presently written to produce a release artifact.
# As such, release build options are disabled.
# This sample, therefore, only demonstrates running a collection of unit tests.

:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
  :release_build: TRUE
  :test_file_prefix: test_

:release_build:
 :output: pf_gtk
 :use_assembly: FALSE

:environment:

:extension:
  :executable: .out

:module_generator:
  :source_root: source
  :test_root: tests

:paths:
  :test:
    - +:test/**
    - -:test/support
    - vendor/bstring/
  :source:
    - src/**
  :support:
    - vendor/bstring/
    - test/support

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :commmon: &common_defines []
  :test:
    - *common_defines
    - TEST
  :test_preprocess:
    - *common_defines
    - TEST

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :includes:
    - types.h
  :plugins:
    - :ignore
  :treat_as:
    UINT: INT
    Status_T: INT
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8

#:tools:
# Ceedling defaults to using gcc for compiling, linking, etc.
# As [:tools] is blank, gcc will be used (so long as it's in your system path)
# See documentation to configure a given toolchain for use

:plugins:
  :load_paths:
    - vendor/ceedling/plugins
  :enabled:
    - stdout_pretty_tests_report
    - module_generator

:tools:
  :test_compiler: &compiler_argz
    :executable: gcc
    :arguments:
      - -I"$": COLLECTION_PATHS_TEST_SUPPORT_SOURCE_INCLUDE_VENDOR
      - -c ${1}
      - "#{`pkg-config --cflags gtk+-2.0`}"
      - "#{`pkg-config --cflags libpcre`}"
      - -o ${2} 
  :test_linker: &linker_argz
    :executable: gcc
    :arguments: 
      - ${1}
      - "#{`pkg-config --libs gtk+-2.0`}"
      - "#{`pkg-config --libs libpcre`}"
      - -o ${2} 
  :release_compiler: *compiler_argz
  :release_linker: *linker_argz
...
